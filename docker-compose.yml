services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: amarvote_backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${NEON_HOST}:${NEON_PORT}/${NEON_DATABASE}?sslmode=require
      - SPRING_DATASOURCE_USERNAME=${NEON_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${NEON_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - SPRING_DEVTOOLS_LIVERELOAD_ENABLED=true
      - RAG_SERVICE_URL=http://rag-service:5001
      - BLOCKCHAIN_SERVICE_URL=http://voting-api:5002
      - MASTER_KEY_PQ=${MASTER_KEY_PQ}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - CLOUDINARY_NAME=${CLOUDINARY_NAME}
      - CLOUDINARY_KEY=${CLOUDINARY_KEY}
      - CLOUDINARY_SECRET=${CLOUDINARY_SECRET}
    volumes:
      - maven_repo:/root/.m2
    networks:
      election_net:
        ipv4_address: 172.20.0.30

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: amarvote_frontend
    ports:
      - "5173:5173"
    networks:
      election_net:
        ipv4_address: 172.20.0.40
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./frontend/certs:/app/certs

  electionguard:
    build: ./Microservice
    container_name: electionguard_service
    ports:
      - "5000:5000"
    networks:
      election_net:
        ipv4_address: 172.20.0.10
    environment:
      - FLASK_DEBUG=0
      - MASTER_KEY_PQ=${MASTER_KEY_PQ}

  # rag-service:
  #   build: ./rag-service
  #   container_name: rag_service
  #   ports:
  #     - "5001:5001"
  #   networks:
  #     election_net:
  #       ipv4_address: 172.20.0.50
  #   environment:
  #     - FLASK_ENV=production
  #     - FLASK_DEBUG=False
  #     - RAG_SERVICE_PORT=5001
  #   volumes:
  #     - ./backend/src/main/resources/pdf:/app/data
  #     - rag_vectorstore:/app/vectorstore

  # ganache:
  #   image: trufflesuite/ganache:latest
  #   container_name: voting-ganache
  #   ports:
  #     - "8545:8545"
  #   environment:
  #     - GANACHE_ACCOUNTS=10
  #     - GANACHE_DETERMINISTIC=true
  #     - GANACHE_MNEMONIC=abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about
  #     - GANACHE_NETWORK_ID=1337
  #     - GANACHE_GAS_LIMIT=6721975
  #     - GANACHE_GAS_PRICE=20000000000
  #   command: >
  #     --host 0.0.0.0
  #     --port 8545
  #     --accounts 10
  #     --mnemonic "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about"
  #     --networkId 1337
  #     --gasLimit 6721975
  #     --gasPrice 20000000000
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8545 || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     voting-network:
  #     election_net:

  # blockchain-deployer:
  #   build:
  #     context: ./blockchain
  #     dockerfile: Dockerfile
  #   container_name: voting-blockchain-deployer
  #   depends_on:
  #     - ganache
  #   environment:
  #     - GANACHE_URL=http://ganache:8545
  #     - NETWORK_ID=1337
  #   volumes:
  #     - contract-artifacts:/app/build
  #   networks:
  #     voting-network:
  #     election_net:

  # voting-api:
  #   build:
  #     context: ./blockchain-microservice
  #     dockerfile: Dockerfile
  #   container_name: voting-api
  #   ports:
  #     - "5002:5002"
  #   depends_on:
  #     - ganache
  #     - blockchain-deployer
  #   environment:
  #     - FLASK_ENV=production
  #     - GANACHE_URL=http://ganache:8545
  #     - NETWORK_ID=1337
  #     - CONTRACT_ARTIFACTS_PATH=/app/contracts
  #   volumes:
  #     - contract-artifacts:/app/contracts:ro
  #     - voting-data:/app/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:5002/health || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     voting-network:
  #     election_net:

volumes:
  maven_repo:
  # rag_vectorstore:
  # contract-artifacts:
  # voting-data:

networks:
  election_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
  voting-network:
    driver: bridge